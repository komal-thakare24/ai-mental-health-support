"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.5.
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
FRONTEND_DIR = BASE_DIR.parent / 'frontend'       # frontend folder ka full path

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-5_9un5rj8f9(a-ybr=oywcdmp$hl3e&*ukkkqnl#!&50ih7t2&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = []

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'api',
    'accounts',
    'core',
    'assessments',
    'django_extensions',
    'mood',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

# ✅ Templates configuration
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR.parent, 'frontend', 'templates')], # frontend/templates ko include kar rahe hain
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'

# ✅ Database (MongoDB via Djongo)
DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        'NAME': 'mental_health_db',
        'CLIENT': {
            'host': 'mongodb+srv://komaltha0245_db_user:Komal9280@cluster0.amnwj6o.mongodb.net/mental_health_db?retryWrites=true&w=majority',
        }
    }
}

# ✅ Password validation
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# ✅ Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# ✅ Static files (CSS, JS, Images)
STATIC_URL = '/static/'
STATICFILES_DIRS = [
   os.path.join(BASE_DIR.parent, 'frontend', 'static'),
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# ✅ Auth + REST
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = "accounts.User"

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
}

# ✅ Prevent Django session from writing into MongoDB
SESSION_ENGINE = "django.contrib.sessions.backends.signed_cookies"

MIGRATION_MODULES = {
    'admin': None,
    'auth': None,
    'contenttypes': None,
    'sessions': None,
}
AUTHENTICATION_BACKENDS = [
    'core.backends.EmailBackend',  # custom email backend
    'django.contrib.auth.backends.ModelBackend',  # default
]
